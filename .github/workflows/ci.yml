name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test (staging/prod)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        python-version: ['3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install client dependencies
      working-directory: client
      run: npm ci

    - name: Build client
      working-directory: client
      run: npm run build

    - name: Run client tests
      working-directory: client
      run: npm test

    - name: Install server dependencies
      working-directory: server
      run: pip install -r requirements.txt

    - name: Run server tests
      working-directory: server
      run: pytest

  security-audit:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      uses: snyk/actions/node@master
      with:
        command: monitor
        args: --all-projects --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-audit]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build client Docker image
      working-directory: client
      run: docker build -t mustang-client:${{ github.sha }} .

    - name: Build server Docker image
      working-directory: server
      run: docker build -t mustang-server:${{ github.sha }} .